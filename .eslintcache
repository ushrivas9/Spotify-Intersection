[{"C:\\Users\\upman\\Desktop\\Desk\\LEARN\\Intersection\\intersection\\src\\App.js":"1"},{"size":3617,"mtime":1606852236914,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"swppxo","C:\\Users\\upman\\Desktop\\Desk\\LEARN\\Intersection\\intersection\\src\\App.js",["7"],"//import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst axios = require(\"axios\");\nconst url = \"https://api.spotify.com/v1/me/top/artists\";\n\nconst useStyles = makeStyles((theme) => ({\n  spotifyTheme: {\n    background: \"#1aa34a\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function App(props) {\n  const classes = useStyles();\n  const params = getHashParams();\n  const token = params.access_token;\n  if (token) {\n    sessionStorage.setItem(\"authtoken\", token);\n  }\n  let initialVal = sessionStorage.getItem(\"playerData\")\n    ? JSON.parse(sessionStorage.getItem(\"playerData\"))\n    : [];\n\n  const [playerData, setPlayerData] = useState(initialVal);\n\n  function getTopArtists() {\n    var auth = \"Bearer \" + sessionStorage.getItem(\"authtoken\");\n    const headers = {\n      Authorization: auth,\n    };\n\n    axios({\n      method: \"get\",\n      url,\n      headers,\n    })\n      .then((response) => {\n        console.log(\"GET DATA SUCCESSFUL\", response.data);\n        var temp = playerData;\n        var temp2 = temp.concat(response.data);\n\n        sessionStorage.setItem(\"playerData\", JSON.stringify(temp2));\n        console.log(\"HEREEEE:\", temp2);\n        setPlayerData(temp2);\n      })\n      .catch(function (error) {\n        console.log(\"GET DATA ERROR\");\n        console.log(error);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <AppBar className={classes.spotifyTheme} position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" align=\"left\" color=\"inherit\">\n            Spotify Intersection\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <a href=\"http://localhost:8888/login\">\n              Player1 Login to Spotify Intersection\n            </a>\n            <div>\n              <button onClick={() => getTopArtists()}>Get My data</button>\n            </div>\n            <div>\n              {playerData.length >= 1 && (\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Have Player1 Data Now\n                </Typography>\n              )}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <a href=\"http://localhost:8888/login\">\n              Player2 Login to Spotify Intersection\n            </a>\n            <div>\n              <button onClick={() => getTopArtists()}>Get My data</button>\n            </div>\n            <div>\n              {playerData.length > 2 && (\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Have Player2 Data Now\n                </Typography>\n              )}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>intersects</Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nfunction getHashParams() {\n  var hashParams = {};\n  var e,\n    r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(1);\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  return hashParams;\n}\n",{"ruleId":"8","severity":1,"message":"9","line":2,"column":27,"nodeType":"10","messageId":"11","endLine":2,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]